"use strict";(()=>{var b,P,N,W;function y(t,n=!1){return window.__TAURI_INTERNALS__.transformCallback(t,n)}b=new WeakMap,P=new WeakMap,N=new WeakMap;async function c(t,n={},e){return window.__TAURI_INTERNALS__.invoke(t,n,e)}W=new WeakMap;var f;(function(t){t.WINDOW_RESIZED="tauri://resize",t.WINDOW_MOVED="tauri://move",t.WINDOW_CLOSE_REQUESTED="tauri://close-requested",t.WINDOW_DESTROYED="tauri://destroyed",t.WINDOW_FOCUS="tauri://focus",t.WINDOW_BLUR="tauri://blur",t.WINDOW_SCALE_FACTOR_CHANGED="tauri://scale-change",t.WINDOW_THEME_CHANGED="tauri://theme-changed",t.WINDOW_CREATED="tauri://window-created",t.WEBVIEW_CREATED="tauri://webview-created",t.DRAG_ENTER="tauri://drag-enter",t.DRAG_OVER="tauri://drag-over",t.DRAG_DROP="tauri://drag-drop",t.DRAG_LEAVE="tauri://drag-leave"})(f||(f={}));async function E(t,n){await c("plugin:event|unlisten",{event:t,eventId:n})}async function I(t,n,e){var s;let o=typeof e?.target=="string"?{kind:"AnyLabel",label:e.target}:(s=e?.target)!==null&&s!==void 0?s:{kind:"Any"};return c("plugin:event|listen",{event:t,target:o,handler:y(n)}).then(i=>async()=>E(t,i))}async function v(t,n,e){return I(t,s=>{E(t,s.id),n(s)},e)}async function w(t,n){await c("plugin:event|emit",{event:t,payload:n})}var l={async openInput(t){try{return{status:"ok",data:await c("plugin:midi|open_input",{id:t})}}catch(n){if(n instanceof Error)throw n;return{status:"error",error:n}}},async closeInput(t){await c("plugin:midi|close_input",{id:t})},async openOutput(t){try{return{status:"ok",data:await c("plugin:midi|open_output",{id:t})}}catch(n){if(n instanceof Error)throw n;return{status:"error",error:n}}},async closeOutput(t){await c("plugin:midi|close_output",{id:t})},async outputSend(t,n){try{return{status:"ok",data:await c("plugin:midi|output_send",{id:t,msg:n})}}catch(e){if(e instanceof Error)throw e;return{status:"error",error:e}}}},m=C({midiMessage:"plugin:midi:midi-message",stateChange:"plugin:midi:state-change"});function C(t){return new Proxy({},{get:(n,e)=>{let s=t[e];return new Proxy(()=>{},{apply:(o,i,[r])=>({listen:a=>r.listen(s,a),once:a=>r.once(s,a),emit:a=>r.emit(s,a)}),get:(o,i)=>{switch(i){case"listen":return r=>I(s,r);case"once":return r=>v(s,r);case"emit":return r=>w(s,r)}}})}})}var T,k=new Promise((t,n)=>{T=()=>t(void 0),setTimeout(()=>n(new Error("Failed to initialise WebMIDI")),1e4)}),A=[],M=[],D=new Set;m.stateChange.listen(t=>{let{inputs:n,outputs:e}=t.payload;A=n,M=e,T();for(let s of D)s.__tauri_statechange(n,e)});var u=class extends Event{constructor(n,e){super("statechange",e),this.port=e?.port||null}};globalThis.MIDIConnectionEvent=u;var d=class extends EventTarget{constructor(){super();this.sysexEnabled=!0;this.inputs=new Map;this.outputs=new Map;this.onstatechange=null;this.__tauri_statechange(A,M),D.add(this),this.addEventListener("statechange",e=>{if(this.onstatechange)return this.onstatechange(e)})}addEventListener(e,s,o){super.addEventListener(e,s,o)}removeEventListener(e,s,o){super.removeEventListener(e,s,o)}__tauri_statechange(e,s){let o=[];for(let[i,r]of this.inputs)e.find(([a,R])=>a===i)||(this.inputs.delete(i),r.state="disconnected",o.push(new u("disconnected",{port:r})));for(let[i,r]of this.outputs)s.find(([a,R])=>a===i)||(this.outputs.delete(i),r.state="disconnected",o.push(new u("disconnected",{port:r})));for(let[i,r]of e){if(this.inputs.has(i))continue;let a=new _(i,r);a.state="connected",this.inputs.set(i,a),o.push(new u("connected",{port:a}))}for(let[i,r]of s){if(this.outputs.has(i))continue;let a=new g(i,r);a.state="connected",this.outputs.set(i,a),o.push(new u("connected",{port:a}))}setTimeout(()=>o.forEach(i=>this.dispatchEvent(i)),0)}};globalThis.MIDIAccess=d;var p=class extends EventTarget{constructor(e,s,o){super();this.identifier=e;this.name=s;this.type=o;this.connection="closed";this.manufacturer=null;this.onstatechange=null;this.state="disconnected";this.version=null;this.id=e,this.name=s}async open(){return this.connection==="open"||this.connection==="pending"?this:this.state==="disconnected"?(this.connection="pending",this.dispatchEvent(new Event("statechange")),this):(this.type==="input"?await l.openInput(this.id):await l.openOutput(this.id),this.connection="open",this.dispatchEvent(new Event("statechange")),this)}async close(){return this.connection==="closed"?this:(this.type==="input"?await l.closeInput(this.id):await l.closeOutput(this.id),this.connection="closed",this.dispatchEvent(new Event("statechange")),this)}};globalThis.MIDIPort=p;var h=class extends Event{constructor(n,e){super(n,e),this.data=e?.data}};globalThis.MIDIMessageEvent=h;var _=class extends p{constructor(e,s){super(e,s,"input");this._onmidimessage=null;this.addEventListener("midimessage",o=>{if(this.onmidimessage)return this.onmidimessage(o)})}open(){return this.stopListening||(this.stopListening=m.midiMessage.listen(e=>{let[s,o]=e.payload;s===this.id&&this.dispatchEvent(new h("midimessage",{data:new Uint8Array(o)}))})),super.open()}close(){return this.stopListening?.then(e=>e()),super.close()}get onmidimessage(){return this._onmidimessage}set onmidimessage(e){this._onmidimessage=e,this.connection!=="open"&&this.open()}};globalThis.MIDIInput=_;var g=class extends p{constructor(n,e){super(n,e,"output")}send(n){if(this.state==="disconnected")throw new Error("MIDIOutput is disconnected");(this.state==="connected"&&this.connection==="closed"?this.open():Promise.resolve()).then(()=>l.outputSend(this.id,n))}};globalThis.MIDIOutput=g;navigator.requestMIDIAccess=()=>k.then(()=>new d);})();
